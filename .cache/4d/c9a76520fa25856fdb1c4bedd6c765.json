{"id":"index.ts","dependencies":[{"name":"C:\\Users\\richa\\Desktop\\MB_Projects\\github\\EL_babylonjs\\tsconfig.json","includedInParent":true,"mtime":1655241430219},{"name":"C:\\Users\\richa\\Desktop\\MB_Projects\\github\\EL_babylonjs\\package.json","includedInParent":true,"mtime":1655246784789},{"name":"babylonjs","loc":{"line":38,"column":37,"index":1998},"parent":"C:\\Users\\richa\\Desktop\\MB_Projects\\github\\EL_babylonjs\\index.ts","resolved":"C:\\Users\\richa\\Desktop\\MB_Projects\\github\\EL_babylonjs\\node_modules\\babylonjs\\babylon.js"},{"name":"regenerator-runtime","loc":{"line":39,"column":8,"index":2022},"parent":"C:\\Users\\richa\\Desktop\\MB_Projects\\github\\EL_babylonjs\\index.ts","resolved":"C:\\Users\\richa\\Desktop\\MB_Projects\\github\\EL_babylonjs\\node_modules\\regenerator-runtime\\runtime.js"},{"name":"./src/scene","loc":{"line":40,"column":24,"index":2071},"parent":"C:\\Users\\richa\\Desktop\\MB_Projects\\github\\EL_babylonjs\\index.ts","resolved":"C:\\Users\\richa\\Desktop\\MB_Projects\\github\\EL_babylonjs\\src\\scene.ts"},{"name":"./src/ground","loc":{"line":41,"column":25,"index":2113},"parent":"C:\\Users\\richa\\Desktop\\MB_Projects\\github\\EL_babylonjs\\index.ts","resolved":"C:\\Users\\richa\\Desktop\\MB_Projects\\github\\EL_babylonjs\\src\\ground.ts"},{"name":"./src/testObjects","loc":{"line":42,"column":30,"index":2161},"parent":"C:\\Users\\richa\\Desktop\\MB_Projects\\github\\EL_babylonjs\\index.ts","resolved":"C:\\Users\\richa\\Desktop\\MB_Projects\\github\\EL_babylonjs\\src\\testObjects.ts"},{"name":"ammojs-typed","loc":{"line":43,"column":47,"index":2231},"parent":"C:\\Users\\richa\\Desktop\\MB_Projects\\github\\EL_babylonjs\\index.ts","resolved":"C:\\Users\\richa\\Desktop\\MB_Projects\\github\\EL_babylonjs\\node_modules\\ammojs-typed\\ammo\\ammo.js"}],"generated":{"js":"\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Babylon = __importStar(require(\"babylonjs\"));\n\nrequire(\"regenerator-runtime\");\n\nvar scene_1 = require(\"./src/scene\");\n\nvar ground_1 = require(\"./src/ground\");\n\nvar testObjects_1 = require(\"./src/testObjects\");\n\nvar ammojs_typed_1 = __importDefault(require(\"ammojs-typed\"));\n\nfunction main() {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var ammo, physics, spread, range, x, z;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, ammojs_typed_1.default)();\n\n          case 2:\n            ammo = _context.sent;\n            physics = new Babylon.AmmoJSPlugin(true, ammo);\n            scene_1.scene.enablePhysics(new Babylon.Vector3(0, -9.8, 0), physics);\n            (0, ground_1.makeGround)(); // Test dump\n\n            spread = 10;\n            range = 50;\n\n            for (x = 0; x < range; x++) {\n              for (z = 0; z < range; z++) {\n                (0, testObjects_1.makeSphere)(1, new Babylon.Vector3(range * spread / 2 - spread * x, 50, range * spread / 2 - spread * z));\n              }\n            }\n\n            scene_1.scene.debugLayer.show();\n            scene_1.engine.runRenderLoop(function () {\n              return scene_1.scene.render();\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\n\nmain();"},"sourceMaps":{"js":{"mappings":[{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":89,"column":0}},{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":89,"column":4}},{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":89,"column":11}},{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":89,"column":14}},{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":89,"column":26}},{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":89,"column":27}},{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":89,"column":34}},{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":89,"column":35}},{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":89,"column":46}},{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":89,"column":47}},{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":89,"column":48}},{"source":"index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":91,"column":0}},{"source":"index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":91,"column":7}},{"source":"index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":91,"column":8}},{"source":"index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":91,"column":29}},{"source":"index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":91,"column":30}},{"source":"index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":93,"column":0}},{"source":"index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":93,"column":4}},{"source":"index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":93,"column":11}},{"source":"index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":93,"column":14}},{"source":"index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":93,"column":21}},{"source":"index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":93,"column":22}},{"source":"index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":93,"column":35}},{"source":"index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":93,"column":36}},{"source":"index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":95,"column":0}},{"source":"index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":95,"column":4}},{"source":"index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":95,"column":12}},{"source":"index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":95,"column":15}},{"source":"index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":95,"column":22}},{"source":"index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":95,"column":23}},{"source":"index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":95,"column":37}},{"source":"index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":95,"column":38}},{"source":"index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":97,"column":0}},{"source":"index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":97,"column":4}},{"source":"index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":97,"column":17}},{"source":"index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":97,"column":20}},{"source":"index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":97,"column":27}},{"source":"index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":97,"column":28}},{"source":"index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":97,"column":47}},{"source":"index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":97,"column":48}},{"source":"index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":99,"column":0}},{"source":"index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":99,"column":4}},{"source":"index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":99,"column":18}},{"source":"index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":99,"column":21}},{"source":"index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":99,"column":36}},{"source":"index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":99,"column":37}},{"source":"index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":99,"column":44}},{"source":"index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":99,"column":45}},{"source":"index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":99,"column":59}},{"source":"index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":99,"column":60}},{"source":"index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":99,"column":61}},{"source":"index.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":101,"column":0}},{"source":"index.ts","name":null,"original":{"line":8,"column":15},"generated":{"line":101,"column":9}},{"source":"index.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":101,"column":13}},{"source":"index.ts","name":null,"original":{"line":8,"column":19},"generated":{"line":101,"column":16}},{"source":"index.ts","name":null,"original":{"line":9,"column":17},"generated":{"line":109,"column":12}},{"source":"index.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":109,"column":19}},{"source":"index.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":109,"column":20}},{"source":"index.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":109,"column":23}},{"source":"index.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":109,"column":37}},{"source":"index.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":109,"column":38}},{"source":"index.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":109,"column":45}},{"source":"index.ts","name":null,"original":{"line":9,"column":17},"generated":{"line":109,"column":48}},{"source":"index.ts","name":null,"original":{"line":9,"column":10},"generated":{"line":112,"column":12}},{"source":"index.ts","name":null,"original":{"line":10,"column":10},"generated":{"line":113,"column":12}},{"source":"index.ts","name":null,"original":{"line":10,"column":42},"generated":{"line":113,"column":22}},{"source":"index.ts","name":null,"original":{"line":10,"column":46},"generated":{"line":113,"column":26}},{"source":"index.ts","name":null,"original":{"line":10,"column":53},"generated":{"line":113,"column":33}},{"source":"index.ts","name":null,"original":{"line":10,"column":54},"generated":{"line":113,"column":34}},{"source":"index.ts","name":null,"original":{"line":10,"column":42},"generated":{"line":113,"column":46}},{"source":"index.ts","name":null,"original":{"line":10,"column":68},"generated":{"line":113,"column":47}},{"source":"index.ts","name":null,"original":{"line":10,"column":42},"generated":{"line":113,"column":51}},{"source":"index.ts","name":null,"original":{"line":10,"column":74},"generated":{"line":113,"column":53}},{"source":"index.ts","name":null,"original":{"line":10,"column":42},"generated":{"line":113,"column":57}},{"source":"index.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":114,"column":12}},{"source":"index.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":114,"column":19}},{"source":"index.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":114,"column":20}},{"source":"index.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":114,"column":25}},{"source":"index.ts","name":null,"original":{"line":11,"column":10},"generated":{"line":114,"column":26}},{"source":"index.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":114,"column":39}},{"source":"index.ts","name":null,"original":{"line":11,"column":25},"generated":{"line":114,"column":40}},{"source":"index.ts","name":null,"original":{"line":11,"column":29},"generated":{"line":114,"column":44}},{"source":"index.ts","name":null,"original":{"line":11,"column":36},"generated":{"line":114,"column":51}},{"source":"index.ts","name":null,"original":{"line":11,"column":37},"generated":{"line":114,"column":52}},{"source":"index.ts","name":null,"original":{"line":11,"column":25},"generated":{"line":114,"column":59}},{"source":"index.ts","name":null,"original":{"line":11,"column":46},"generated":{"line":114,"column":60}},{"source":"index.ts","name":null,"original":{"line":11,"column":25},"generated":{"line":114,"column":61}},{"source":"index.ts","name":null,"original":{"line":11,"column":49},"generated":{"line":114,"column":63}},{"source":"index.ts","name":null,"original":{"line":11,"column":50},"generated":{"line":114,"column":64}},{"source":"index.ts","name":null,"original":{"line":11,"column":25},"generated":{"line":114,"column":67}},{"source":"index.ts","name":null,"original":{"line":11,"column":55},"generated":{"line":114,"column":69}},{"source":"index.ts","name":null,"original":{"line":11,"column":25},"generated":{"line":114,"column":70}},{"source":"index.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":114,"column":71}},{"source":"index.ts","name":null,"original":{"line":11,"column":60},"generated":{"line":114,"column":73}},{"source":"index.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":114,"column":80}},{"source":"index.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":115,"column":12}},{"source":"index.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":115,"column":13}},{"source":"index.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":115,"column":16}},{"source":"index.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":115,"column":24}},{"source":"index.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":115,"column":25}},{"source":"index.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":115,"column":35}},{"source":"index.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":115,"column":40}},{"source":"index.ts","name":null,"original":{"line":16,"column":10},"generated":{"line":117,"column":12}},{"source":"index.ts","name":null,"original":{"line":16,"column":19},"generated":{"line":117,"column":21}},{"source":"index.ts","name":null,"original":{"line":17,"column":10},"generated":{"line":118,"column":12}},{"source":"index.ts","name":null,"original":{"line":17,"column":18},"generated":{"line":118,"column":20}},{"source":"index.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":120,"column":12}},{"source":"index.ts","name":null,"original":{"line":18,"column":13},"generated":{"line":120,"column":17}},{"source":"index.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":120,"column":18}},{"source":"index.ts","name":null,"original":{"line":18,"column":17},"generated":{"line":120,"column":21}},{"source":"index.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":120,"column":22}},{"source":"index.ts","name":null,"original":{"line":18,"column":20},"generated":{"line":120,"column":24}},{"source":"index.ts","name":null,"original":{"line":18,"column":21},"generated":{"line":120,"column":25}},{"source":"index.ts","name":null,"original":{"line":18,"column":24},"generated":{"line":120,"column":28}},{"source":"index.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":120,"column":33}},{"source":"index.ts","name":null,"original":{"line":18,"column":31},"generated":{"line":120,"column":35}},{"source":"index.ts","name":null,"original":{"line":18,"column":32},"generated":{"line":120,"column":36}},{"source":"index.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":120,"column":38}},{"source":"index.ts","name":null,"original":{"line":18,"column":37},"generated":{"line":120,"column":40}},{"source":"index.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":121,"column":14}},{"source":"index.ts","name":null,"original":{"line":19,"column":17},"generated":{"line":121,"column":19}},{"source":"index.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":121,"column":20}},{"source":"index.ts","name":null,"original":{"line":19,"column":21},"generated":{"line":121,"column":23}},{"source":"index.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":121,"column":24}},{"source":"index.ts","name":null,"original":{"line":19,"column":24},"generated":{"line":121,"column":26}},{"source":"index.ts","name":null,"original":{"line":19,"column":25},"generated":{"line":121,"column":27}},{"source":"index.ts","name":null,"original":{"line":19,"column":28},"generated":{"line":121,"column":30}},{"source":"index.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":121,"column":35}},{"source":"index.ts","name":null,"original":{"line":19,"column":35},"generated":{"line":121,"column":37}},{"source":"index.ts","name":null,"original":{"line":19,"column":36},"generated":{"line":121,"column":38}},{"source":"index.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":121,"column":40}},{"source":"index.ts","name":null,"original":{"line":19,"column":41},"generated":{"line":121,"column":42}},{"source":"index.ts","name":null,"original":{"line":20,"column":12},"generated":{"line":122,"column":16}},{"source":"index.ts","name":null,"original":{"line":20,"column":12},"generated":{"line":122,"column":17}},{"source":"index.ts","name":null,"original":{"line":20,"column":12},"generated":{"line":122,"column":20}},{"source":"index.ts","name":null,"original":{"line":20,"column":12},"generated":{"line":122,"column":33}},{"source":"index.ts","name":null,"original":{"line":20,"column":12},"generated":{"line":122,"column":34}},{"source":"index.ts","name":null,"original":{"line":20,"column":12},"generated":{"line":122,"column":44}},{"source":"index.ts","name":null,"original":{"line":20,"column":24},"generated":{"line":122,"column":46}},{"source":"index.ts","name":null,"original":{"line":20,"column":12},"generated":{"line":122,"column":47}},{"source":"index.ts","name":null,"original":{"line":20,"column":27},"generated":{"line":122,"column":49}},{"source":"index.ts","name":null,"original":{"line":20,"column":31},"generated":{"line":122,"column":53}},{"source":"index.ts","name":null,"original":{"line":20,"column":38},"generated":{"line":122,"column":60}},{"source":"index.ts","name":null,"original":{"line":20,"column":39},"generated":{"line":122,"column":61}},{"source":"index.ts","name":null,"original":{"line":20,"column":27},"generated":{"line":122,"column":68}},{"source":"index.ts","name":null,"original":{"line":20,"column":48},"generated":{"line":122,"column":69}},{"source":"index.ts","name":null,"original":{"line":20,"column":53},"generated":{"line":122,"column":74}},{"source":"index.ts","name":null,"original":{"line":20,"column":56},"generated":{"line":122,"column":77}},{"source":"index.ts","name":null,"original":{"line":20,"column":48},"generated":{"line":122,"column":83}},{"source":"index.ts","name":null,"original":{"line":20,"column":65},"generated":{"line":122,"column":86}},{"source":"index.ts","name":null,"original":{"line":20,"column":48},"generated":{"line":122,"column":87}},{"source":"index.ts","name":null,"original":{"line":20,"column":69},"generated":{"line":122,"column":90}},{"source":"index.ts","name":null,"original":{"line":20,"column":75},"generated":{"line":122,"column":96}},{"source":"index.ts","name":null,"original":{"line":20,"column":78},"generated":{"line":122,"column":99}},{"source":"index.ts","name":null,"original":{"line":20,"column":27},"generated":{"line":122,"column":100}},{"source":"index.ts","name":null,"original":{"line":20,"column":81},"generated":{"line":122,"column":102}},{"source":"index.ts","name":null,"original":{"line":20,"column":27},"generated":{"line":122,"column":104}},{"source":"index.ts","name":null,"original":{"line":20,"column":85},"generated":{"line":122,"column":106}},{"source":"index.ts","name":null,"original":{"line":20,"column":90},"generated":{"line":122,"column":111}},{"source":"index.ts","name":null,"original":{"line":20,"column":93},"generated":{"line":122,"column":114}},{"source":"index.ts","name":null,"original":{"line":20,"column":85},"generated":{"line":122,"column":120}},{"source":"index.ts","name":null,"original":{"line":20,"column":102},"generated":{"line":122,"column":123}},{"source":"index.ts","name":null,"original":{"line":20,"column":85},"generated":{"line":122,"column":124}},{"source":"index.ts","name":null,"original":{"line":20,"column":106},"generated":{"line":122,"column":127}},{"source":"index.ts","name":null,"original":{"line":20,"column":112},"generated":{"line":122,"column":133}},{"source":"index.ts","name":null,"original":{"line":20,"column":115},"generated":{"line":122,"column":136}},{"source":"index.ts","name":null,"original":{"line":20,"column":27},"generated":{"line":122,"column":137}},{"source":"index.ts","name":null,"original":{"line":20,"column":12},"generated":{"line":122,"column":138}},{"source":"index.ts","name":null,"original":{"line":21,"column":9},"generated":{"line":123,"column":14}},{"source":"index.ts","name":null,"original":{"line":22,"column":5},"generated":{"line":124,"column":12}},{"source":"index.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":126,"column":12}},{"source":"index.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":126,"column":19}},{"source":"index.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":126,"column":20}},{"source":"index.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":126,"column":25}},{"source":"index.ts","name":null,"original":{"line":24,"column":10},"generated":{"line":126,"column":26}},{"source":"index.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":126,"column":36}},{"source":"index.ts","name":null,"original":{"line":24,"column":21},"generated":{"line":126,"column":37}},{"source":"index.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":126,"column":41}},{"source":"index.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":127,"column":12}},{"source":"index.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":127,"column":19}},{"source":"index.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":127,"column":20}},{"source":"index.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":127,"column":26}},{"source":"index.ts","name":null,"original":{"line":26,"column":11},"generated":{"line":127,"column":27}},{"source":"index.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":127,"column":40}},{"source":"index.ts","name":null,"original":{"line":26,"column":26},"generated":{"line":127,"column":41}},{"source":"index.ts","name":null,"original":{"line":26,"column":26},"generated":{"line":128,"column":14}},{"source":"index.ts","name":null,"original":{"line":26,"column":32},"generated":{"line":128,"column":21}},{"source":"index.ts","name":null,"original":{"line":26,"column":32},"generated":{"line":128,"column":28}},{"source":"index.ts","name":null,"original":{"line":26,"column":32},"generated":{"line":128,"column":29}},{"source":"index.ts","name":null,"original":{"line":26,"column":32},"generated":{"line":128,"column":34}},{"source":"index.ts","name":null,"original":{"line":26,"column":38},"generated":{"line":128,"column":35}},{"source":"index.ts","name":null,"original":{"line":26,"column":32},"generated":{"line":128,"column":41}},{"source":"index.ts","name":null,"original":{"line":26,"column":26},"generated":{"line":128,"column":43}},{"source":"index.ts","name":null,"original":{"line":26,"column":26},"generated":{"line":129,"column":12}},{"source":"index.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":129,"column":13}},{"source":"index.ts","name":null,"original":{"line":27,"column":1},"generated":{"line":138,"column":0}},{"source":"index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":140,"column":0}},{"source":"index.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":140,"column":4}}],"sources":{"index.ts":"import * as Babylon from 'babylonjs';\r\nimport 'regenerator-runtime';\r\nimport { scene, engine } from './src/scene';\r\nimport { makeGround } from './src/ground';\r\nimport { makeCube, makeSphere } from './src/testObjects';\r\nimport Ammo from 'ammojs-typed';\r\n\r\nasync function main() : Promise<void> {\r\n    const ammo = await Ammo();\r\n    const physics: Babylon.AmmoJSPlugin = new Babylon.AmmoJSPlugin( true, ammo );\r\n    scene.enablePhysics( new Babylon.Vector3( 0, -9.8, 0 ), physics );\r\n\r\n    makeGround();\r\n\r\n    // Test dump\r\n    const spread = 10;\r\n    const range = 50;\r\n    for( var x = 0; x < range; x++ ) {\r\n        for( var z = 0; z < range; z++ ) {\r\n            makeSphere( 1, new Babylon.Vector3( range * spread / 2 - spread * x, 50, range * spread / 2 - spread * z ))\r\n        }\r\n    }\r\n\r\n    scene.debugLayer.show();\r\n\r\n    engine.runRenderLoop( () => scene.render() );\r\n}\r\n\r\nmain();"},"lineCount":null}},"error":null,"hash":"c133d19822343206855843d7c58702ef","cacheData":{"env":{}}}